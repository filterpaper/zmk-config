/*
 * Copyright (c) 2021 @filterpaper
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define BSE 0
#define CMK 1
#define NUM 2
#define SYM 3
#define FNC 4

&mt { tapping-term-ms = <230>; };
&lt { quick_tap_ms = <200>; };

/ {
	combos {
		compatible = "zmkcombos";
		combo_esc {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};

		combo_tab {
			timeout-ms = <50>;
			key-positions = <10 11>;
			bindings = <&kp TAB>;
		};

		combo_ralt {
			timeout-ms = <50>;
			key-positions = <17 16>;
			bindings = <&kp RALT>;
		};

		combo_lalt {
			timeout-ms = <50>;
			key-positions = <11 12>;
			bindings = <&kp LALT>;
		};

		combo_lgui {
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&kp LGUI>;
		};

		combo_rgui {
			timeout-ms = <50>;
			key-positions = <17 18>;
			bindings = <&kp RGUI>;
		};
	};

	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "home row mods";
			#binding-cells = <2>;
			tapping-term-ms = <230>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
			&kp Q       &kp W      &kp E       &kp R      &kp T   &kp Y &kp U      &kp I       &kp O      &kp P
			&hm LSHFT A &hm LALT S &hm LCTRL D &hm LGUI F &kp G   &kp H &hm LGUI J &hm LCTRL K &hm LALT L &hm LSHFT SEMI
			&kp Z       &kp X      &kp C       &kp V      &kp B   &kp N &kp M      &kp COMMA   &kp DOT    &kp FSLH
			                           &lt SYM TAB &mt RSHFT ENTER   &mt RSHFT SPACE &lt NUM BSPC
			>;
		};
		colemak_layer {
			bindings = <
			&kp Q    &kp W    &kp F    &kp P    &kp G        &kp J    &kp L    &kp U     &kp Y   &kp SEMI
			&kp A    &kp R    &kp S    &kp T    &kp D        &kp H    &kp N    &kp E     &kp I   &kp O
			&kp Z    &kp X    &kp C    &kp V    &kp B        &kp K    &kp M    &kp COMMA &kp DOT &kp FSLH
			                    &lt SYM TAB &mt SHFT ENTER     &mt RSHFT SPACE &lt NUM BSPC
			>;
		};
		number_layer {
			bindings = <
			&trans   &kp N1    &kp N2    &kp N3    &kp C_VOL_UP    &kp HOME &kp PG_DN &kp PG_UP &kp END  &kp DQT
			&trans   &kp N4    &kp N5    &kp N6    &kp C_VOL_DN    &kp LEFT &kp DOWN &kp UP   &kp RGHT &kp SQT
			&kp CAPS &kp N7    &kp N8    &kp N9    &kp N0          &trans   &trans   &trans   &trans   &trans
			                           &mo FNC &kp ESC         &trans &trans
			>;
		};
		symbol_layer {
			bindings = <
			&trans, &trans   &kp LBKT &kp LBRC &kp RBRC &trans     &kp CARET &kp LPAR  &kp RPAR  &kp RBKT &kp TILDE
			&trans  &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT  &kp AMPS  &kp MINUS &kp EQUAL &kp BSLH &kp GRAVE
			&trans  &trans   &trans   &trans   &trans   &trans     &kp ASTRK &kp UNDER &kp PLUS  &kp PIPE &trans
				                           &trans &trans     &kp SPACE  &mo FNC
			>;
		};
		function_layer {
			bindings = <
			&trans  &kp F1   &kp F2   &kp F3   &kp F10     &trans &trans &trans &trans &tog CMK
			&trans  &kp F4   &kp F5   &kp F6   &kp F11     &trans &trans &trans &trans &kp INS
			&trans  &kp F7   &kp F8   &kp F9   &kp F12     &trans &trans &trans &trans &kp DEL
			                           &trans &trans        &trans  &trans
			>;
		};
	};
};
